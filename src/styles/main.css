@tailwind base;
@tailwind components;
@tailwind utilities;

@keyframes wavy {
  from {
    transform: translateY(-3%);
  }

  to {
    transform: translateY(3%);
  }
}

body {
  @apply bg-white dark:bg-zinc-900 selection:bg-primary-500/20 dark:selection:bg-primary-400/20;
}

@layer base {
  html,
  body {
    @apply min-h-screen;
  }

  body {
    @apply flex flex-col;

    -webkit-tap-highlight-color: transparent;
  }

  [data-reactroot] {
    @apply contents;

    > * {
      @apply flex-none w-full;
    }
  }

  a,
  option,
  label,
  *[role="button"],
  button:not([disabled]),
  input:not([disabled]),
  textarea:not([disabled]),
  select:not([disabled]) {
    @apply touch-manipulation;
  }
}

@layer utilities {
  .focusable {
    @apply box-decoration-clone focus:!decoration-transparent focus:outline-none focus:ring focus:ring-primary-500/40 dark:focus:ring-primary-400/40;
  }

  .link {
    @apply transition focusable rounded-sm underline focus:decoration-transparent decoration-2 underline-offset-2 decoration-zinc-600/20 dark:decoration-white/20 selection:decoration-zinc-600/20 dark:selection:decoration-white/20 hover:decoration-zinc-600/40 dark:hover:decoration-white/40;
  }
}

@layer components {
  .content {
    @apply mx-auto max-w-screen-md px-5-safe;
  }
}

.counter {
  mask-image: linear-gradient(
    0deg,
    transparent 0%,
    black 25%,
    black 75%,
    transparent 100%
  );
}

.portrait span {
  vertical-align: top;
}

.delightful span[data-character] {
  @apply inline-block relative;

  animation: 0.8s ease-in-out calc(var(--character) * -0.1s) infinite alternate
    both wavy;
}
